services:
  ############################
  # Manager app + Dapr sidecar
  ############################
  manager:
    build:
      context: .
      dockerfile: ./manager/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./manager:/app/manager
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - shared-db
      - rabbitmq
    networks:
      - network-dapr

  manager-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "manager",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - manager
    networks:
      - network-dapr

  ############################
  # Engine app + Dapr sidecar
  ############################
  engine:
    build:
      context: .
      dockerfile: ./engine/Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./engine:/app/engine
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - manager
    networks:
      - network-dapr

  engine-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "engine",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - engine
    networks:
      - network-dapr

  ############################
  # HFAccessor app + Dapr sidecar
  ############################
  hfaccessor:
    build:
      context: .
      dockerfile: ./hfaccessor/Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./hfaccessor:/app/hfaccessor
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - engine
    networks:
      - network-dapr

  hfaccessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "hfaccessor",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - hfaccessor
    networks:
      - network-dapr

  ############################
  # EmailAccessor app + Dapr sidecar
  ############################
  emailaccessor:
    build:
      context: .
      dockerfile: ./emailaccessor/Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./emailaccessor:/app/emailaccessor
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - manager
    networks:
      - network-dapr

  emailaccessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "emailaccessor",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - emailaccessor
    networks:
      - network-dapr

  ############################
  # NewsAccessor app + Dapr sidecar
  ############################
  newsaccessor:
    build:
      context: .
      dockerfile: ./newsaccessor/Dockerfile
    ports:
      - "8004:8000"
    volumes:
      - ./newsaccessor:/app/newsaccessor
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - manager
    networks:
      - network-dapr

  newsaccessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "newsaccessor",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - newsaccessor
    networks:
      - network-dapr

  ############################
  # UserAccessor app + Dapr sidecar
  ############################
  useraccessor:
    build:
      context: .
      dockerfile: ./useraccessor/Dockerfile
    ports:
      - "8006:8000"
    volumes:
      - ./useraccessor:/app/useraccessor
      - shared-db:/app/db
    environment:
      - PYTHONPATH=/app
    depends_on:
      - manager
    networks:
      - network-dapr

  useraccessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "-app-port", "8000",
        "-app-id", "useraccessor",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "./dapr/components",
        "-config", "./dapr/config.yaml",
        ]
    volumes:
      - ./dapr:/dapr
    depends_on:
      - useraccessor
    networks:
      - network-dapr

  ############################
  # RabbitMQ
  ############################
  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - network-dapr 

  ############################
  # SQLite Database
  ############################
  shared-db:
    image: python:3.9-slim
    environment:
      - DATABASE_URL=sqlite:///./users.db
    volumes:
      - ./data:/app/data
    networks:
      - network-dapr
  
networks:
  network-dapr:
    driver: bridge

volumes:
  shared-db:
    driver: local
